package uwb.css390.BrandanHaertelMP1;

import java.util.Timer;
import java.util.TimerTask;

import uwb.example.simpleTimerEvents.MainActivity;
import uwb.example.simpleTimerEvents.MainActivity.MyTimerTask;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;

public class MainActivity extends Activity {
	
	//MainActivity Objects
	TextView mTextTime;
	TextView mTextSpeed;
	TextView mTextCount;
	ProgressBar mProgressTime;
	SeekBar mSeekSpeed;
	Button mButtonInc;
	Button mButtonDec;
	Button mButtonQuit;
	
	// timer support
	Timer mGlobalTimer;
	MyTimerTask mTimerTask;
	
	//Vars
	int mSpeed = 5;
	int mCount = 0;
	int mSecond = 0;
	int mMillisecond = 0;
	

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        mTextTime = (TextView) findViewById(R.id.textTime);
        mTextSpeed = (TextView) findViewById(R.id.textSpeed);
        mTextCount = (TextView) findViewById(R.id.textCount);
        mProgressTime = (ProgressBar) findViewById(R.id.progressTime);
        mSeekSpeed = (SeekBar) findViewById(R.id.seekSpeed);
        mButtonInc = (Button) findViewById(R.id.buttonInc);
        mButtonDec = (Button) findViewById(R.id.buttonDec);
        mButtonQuit = (Button) findViewById(R.id.buttonQuit);
        
        mTimerTask = new MyTimerTask(this, mTextCount, mProgressTime);
		mGlobalTimer = new Timer("GlobalTimer");
		mGlobalTimer.schedule(mTimerTask, 100, 100);
        
        mSeekSpeed.setOnSeekBarChangeListener(
        		new OnSeekBarChangeListener() {
					@Override
					public void onProgressChanged(SeekBar seekBar,
							int progress, boolean fromUser) {
						// TODO Auto-generated method stub
						processSeek(progress);
					}

					@Override
					public void onStartTrackingTouch(SeekBar seekBar) {
						// TODO Auto-generated method stub
						// Not Used
					}

					@Override
					public void onStopTrackingTouch(SeekBar seekBar) {
						// TODO Auto-generated method stub
						// Not Used
					}
        		});
        
        // Initial Values
        mTextCount.setText("" + mCount);
        mSeekSpeed.setProgress(5);
        mTextTime.setVisibility(android.view.View.INVISIBLE);
        
        
        // What to do when QuitButton is clicked?
        mButtonQuit.setOnClickListener(
			new OnClickListener(){
		      public void onClick(View v){
		    	  processQuit();
		      }
		});
		
		// What to do when IncButton is clicked?
		mButtonInc.setOnClickListener(
			new OnClickListener() {
				public void onClick(View v){
					processIncCount(1);
				}
			});
		
		// What to do when IncButton is clicked?
		mButtonDec.setOnClickListener(
			new OnClickListener() {
				public void onClick(View v){
					processIncCount(-1);
				}
			});
    }
    
    private void processIncCount(int i){
    	mCount += i;
    	mTextCount.setText("" + mCount);
    }
    
    @SuppressWarnings("unused")
	private void processSetTime(int sec, int millsec){
    	mTextTime.setText("" + sec + ":" + millsec);
    }
    
    private void processSeek(int value){
    	mSpeed = value;
    	mProgressTime.setMax(mSpeed);
    	mTextSpeed.setText("Increment Rate: " + mSpeed + " Seconds");
    }
    
    private void processQuit(){
    	System.exit(0);
		finish();
    }
    
	// this is a separate thread and _CANNOT_ modify UI parameters!
	// Either use a Handler, or run this thread on the main UI thread
	// For details: http://stackoverflow.com/questions/4597690/android-timer-how
	class MyTimerTask extends TimerTask {

		private final int kUpdateInterval = 100;
		private final int kOneSecond = 1000;
		
		// Keeping track of what has been counted
		int mMilliSec = 0, mSec = 0;
		TextView mEcho; // the GUI echo in the activity
		MainActivity mTheActivity;
		
		// COnstructor
		public MyTimerTask(MainActivity gui, TextView v, ProgressBar b) { 
			mEcho = v;
			mEcho.setText("YES!!");
			mTheActivity = gui;
		}
		
		// This function is called once every our scheduled interval
		@Override
		public void run() {
			mMilliSec += kUpdateInterval;
			if (mMilliSec > kOneSecond) {
				mSec++;
				mMilliSec = 0;
			} 
			
			// Post a run event for UI thread to execute later
			mTheActivity.runOnUiThread(new Runnable() {
				@Override
				public void run() {
					mEcho.setText(mSec + ":" + mMilliSec);
				}
			});
		}	
	}
}
